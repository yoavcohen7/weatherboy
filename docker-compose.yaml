version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    networks:
      - elknet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      XPACK_SECURITY_ENABLED: "false"
      SERVER_HOST: "0.0.0.0"
      NODE_OPTIONS: "--max-old-space-size=1024"
    depends_on:
      elasticsearch:
        condition: service_started
    ports:
      - "5601:5601"
    networks:
      - elknet
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5601/api/status >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - elknet

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    container_name: logstash
    depends_on:
      - elasticsearch
      - rabbitmq
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - elknet

  weather-sender:
    build: ./weather-app
    container_name: weather-app
    environment:
      - OPENWEATHERMAP_API_KEY=b3cc1ecdf19c1539c33d9d479111cb47
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - elknet

  kbn-dataview-init:
    image: python:3.12-alpine
    container_name: kbn-dataview-init
    depends_on:
      weather-sender:
        condition: service_started     # start only after the app began sending data
      kibana:
        condition: service_healthy     # and Kibana is ready
      elasticsearch:
        condition: service_started
    working_dir: /app
    volumes:
      - ./kibana/init:/app:ro          # mount the script below
    command: >
      sh -c "pip install --no-cache-dir requests && python create_dataview.py"
    environment:
      - KIBANA_URL=http://kibana:5601
      - ELASTIC_URL=http://elasticsearch:9200
      - DATA_VIEW_TITLE=rabbitmq-logs*
      - DATA_VIEW_NAME=RabbitMQ Logs
      - DATA_VIEW_TIMEFIELD=@timestamp
      - REQUIRED_INDEX=rabbitmq-logs*  
    networks:
      - elknet
   
  kbn-dashboard-import:
    image: python:3.12-alpine
    working_dir: /app
    volumes:
      - ./:/app:ro
    environment:
      - KIBANA_URL=http://kibana:5601
      - DASHBOARD_FILE=kibana/dashboard_source.json
      - DATA_VIEW_TITLE=rabbitmq-logs*
      - DATA_VIEW_NAME=RabbitMQ Logs
      - TIME_FIELD=@timestamp
      - CREATE_DATAVIEW_IF_MISSING=1
      - DEBUG=1
    command: >
      sh -lc "pip install --no-cache-dir requests &&
              python kibana/import_dashboard.py"
    depends_on:
      - kibana
    networks:
      - elknet
    restart: "no"
  

networks:
  elknet:
    driver: bridge
