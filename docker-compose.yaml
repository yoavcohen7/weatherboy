version: "3.9"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    networks:
      - elknet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "5601:5601"
    networks:
      - elknet
    healthcheck:
      # משתמש ב-Node שמובנה בתמונה של Kibana (אין תלות ב-curl)
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:5601/api/status',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 60
      start_period: 60s

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - elknet

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    container_name: logstash
    depends_on:
      - elasticsearch
      - rabbitmq
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - elknet

  # weather-sender יתחיל רק אחרי שקיבאנה HEALTHY, והשאר לפחות "עלו"
  weather-sender:
    build: ./weather-app
    container_name: weather-app
    environment:
      - OPENWEATHERMAP_API_KEY=b3cc1ecdf19c1539c33d9d479111cb47
    depends_on:
      kibana:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_started
      logstash:
        condition: service_started
    networks:
      - elknet

  # יבוא Saved Objects רק אחרי שקיבאנה מוכנה וגם האינדקס נוצר
  kbn-init:
    image: curlimages/curl:8.8.0
    container_name: kbn-init
    depends_on:
      kibana:
        condition: service_healthy
      weather-sender:
        condition: service_started   # מבטיח שהסנדר כבר התחיל להזרים
      logstash:
        condition: service_started   # כדי שהאינדקס ייווצר בצינור המלא
    command: >
      sh -c "
      echo 'Waiting for Kibana...' &&
      until curl -fsS http://kibana:5601/api/status >/dev/null; do sleep 3; done &&
      echo 'Waiting for index rabbitmq-logs...' &&
      until curl -fsS -o /dev/null http://elasticsearch:9200/rabbitmq-logs; do sleep 3; done &&
      echo 'Importing saved objects (Data View + Dashboard)...' &&
      curl -fsS -X POST 'http://kibana:5601/api/saved_objects/_import?overwrite=true'
        -H 'kbn-xsrf: true'
        -F 'file=@/kbn-export.ndjson'
      && echo 'Done.' "
    volumes:
      - ./kibana/kbn-export.ndjson:/kbn-export.ndjson:ro
    networks:
      - elknet
    restart: "no"

networks:
  elknet:
    driver: bridge
